//参考：https://www.cnblogs.com/suhaha/p/11733716.html
options {
    STATIC = false;
}
PARSER_BEGIN(Calculator)
    import java.io.PrintStream;
    public class Calculator {
        public static void main(String[] args) throws ParseException,TokenMgrError,NumberFormatException{
          Calculator parser = new Calculator(System.in);
          parser.Start(System.out);
        }
        double previousValue = 0.0;
    }
PARSER_END(Calculator)

SKIP : { " " }
TOKEN : { < EOL : "\n" | "\r" | "\r\n" > }
TOKEN : { < PLUS : "+" > }
TOKEN : { < MINUS : "-" > }
TOKEN : { < TIMES : "*" > }
TOKEN : { < DIVIDE : "/" > }
TOKEN : { < OPEN_PAR : "(" > }
TOKEN : { < CLOSE_PAR : ")" > }
TOKEN : { < PREVIOUS : "$" > }
TOKEN : { < NUMBER : <DIGITS>
                   | <DIGITS> "." <DIGITS>
                   | <DIGITS> "."
                   | "."<DIGITS> >
        }
TOKEN : { < #DIGITS : (["0"-"9"])+ > }

void Start(PrintStream printStream) throws NumberFormatException :
{}
{
    (
        previousValue = Expression()
        <EOL> { printStream.println( previousValue ) ; }
    )*
    <EOF>
}

double Expression() throws NumberFormatException : {
    double i ;
    double value ;
}
{
    value = Term()
    (
        <PLUS>
        i = Term()
        { value += i ; }
        |
        <MINUS>
        i = Term()
        { value -= i ; }
    )*
    { return value ; }
}

double Term() throws NumberFormatException :
{
    double i;
    double value;
}
{
    value = PrimaryT()
    (
        <TIMES>
        i = PrimaryT()
        {value *=i;}
        |
        <DIVIDE>
        i = PrimaryT()
        {value /=i;}
    )*
    {return value;}
}

double PrimaryT() throws NumberFormatException :
{
    Token t ;
    double d ;
}
{
    t = <NUMBER>
    { return Double.parseDouble( t.image ) ; }
    |
    <PREVIOUS>
    {return previousValue;}
    |
    <OPEN_PAR> d = Expression() <CLOSE_PAR>
    {return d;}
    |
    <MINUS> d=PrimaryT()
    {return -d;}
}